let tabGroups = document.querySelectorAll("._tabs-parent")

tabGroups.forEach(tabGroup => {
    let tabs = tabGroup.querySelectorAll("._tab")
    let contents = tabGroup.querySelectorAll(".tab-content")

    tabs.forEach(tab => {
        tab.onclick = function(){
            let tabId = tab.getAttribute("data-tab")
            tabs.forEach(tab => {
                tab.classList.remove("_active")
            })
            contents.forEach(content => {
                content.classList.remove("_active")
            })
            tab.classList.add("_active")
            tabGroup.querySelector(`.${tabId}`).classList.add("_active")
        }
    })
})

let progressFillItems = document.querySelectorAll(".progress__fill")
progressFillItems.forEach(progressFill => {
    if(progressFill){
        let pathLength = progressFill.getTotalLength();
        let fillPercent = +progressFill.getAttribute("data-fill");
        progressFill.style.strokeDasharray = pathLength + ' ' + pathLength;
        progressFill.style.strokeDashoffset = pathLength * -1;

        setTimeout(()=>{
            setProgressFill(progressFill,fillPercent)
        },1000)
    }
})


function setProgressFill(el,progressNum) {
    let pathLength = el.getTotalLength();
    let drawLength = pathLength * (progressNum / 100);
    el.style.strokeDashoffset = drawLength - pathLength
}


function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}

function mainSlider() {
    var swiper = new Swiper('.main-slider .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 0,
        watchSlidesProgress: true,
        preventClicks :true,
        a11y: false,
        observer: true,
        observeParents: true,
        observeSlideChildren: true,
        navigation: {
            nextEl: '.main-slider .swiper-button-next',
            prevEl: '.main-slider .swiper-button-prev',
        },
        pagination: {
            el: '.main-slider .swiper-pagination',
            type: 'fraction',
            clickable: true,
            renderFraction: function (currentClass, totalClass) {
                return '(<span class="' + currentClass + '"></span>' + '/' + '<span class="' + totalClass + '"> </span>)';
            }
        },
    })
}

function bonusSlider() {
    let bonusSliderWrap = document.querySelector(".bonus-slider")
    if(!bonusSliderWrap){
        return
    }
    var swiper = new Swiper('.bonus-slider .swiper-container', {
        slidesPerView: "auto",
        spaceBetween: 0,
        watchSlidesProgress: true,
        preventClicks :true,
        a11y: false,
        observer: true,
        observeParents: true,
        observeSlideChildren: true,
        on: {
            init: function () {
                let startSlide = +bonusSliderWrap.getAttribute("data-current-slide")
                console.log(startSlide)
                this.slideTo(startSlide-1,0)
            },
        },
    })
}


Sliders()
gallery()
mainSlider()
bonusSlider()


let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
